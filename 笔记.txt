1. EurekaClient.java 源码
 1 DiscoveryClient() 构造方法 六个参数
 1.1 fetchRegistry(false); //从远程获取注册表信息
     1.1.1 getAndStoreFullRegistry(); //全量获取注册表
            eurekaTransport.queryClient.getApplications(remoteRegionsRef.get()) //AbstractJerseyEurekaHttpClient.getApplications() 客户端提交全量获取注册表的请求
            AbstractJerseyEurekaHttpClient.java getApplicationsInternal(String urlPath, String[] regions)两个参数
     1.1.2 getAndUpdateDelta(applications); //增量获取注册表

 1.2 if (!register() ) { //注册，实际不会在这里第一次注册，条件不满足
     1.2.1 httpResponse = eurekaTransport.registrationClient.register(instanceInfo); //AbstractJerseyEurekaHttpClient.register()注册 

 1.3 initScheduledTasks(); //定时任务
     1.3.1 定时更新客户端注册表
            TimedSupervisorTask.run() 能够实现下一次的调用，多次执行
            CacheRefreshThread.run().refreshRegistry() 以指定的时间间隔获取注册表信息的任务。（获取注册表）
                boolean success = fetchRegistry(remoteRegionsModified); //获取注册表信息
                    getAndUpdateDelta(applications); //增量获取注册表
                        eurekaTransport.queryClient.getDelta(remoteRegionsRef.get()); //获取增量信息的请求
                            AbstractJerseyEurekaHttpClient.java getApplicationsInternal(String urlPath, String[] regions)两个参数
                        updateDelta(delta); //这里要将从server获取到的所有变更信息更新到本地缓存。
                            applications.addApplication(app); //新增、修改
                            existingApp.removeInstance(instance); //删除

     1.3.2 定时续约
            TimedSupervisorTask.run() 能够实现下一次的调用，多次执行
            HeartbeatThread.run().renew() 定时续约 
                eurekaTransport.registrationClient.sendHeartBeat(instanceInfo.getAppName(), instanceInfo.getId(), instanceInfo, null);续约
                    AbstractJerseyEurekaHttpClient.java sendHeartBeat()
                        requestBuilder.put(ClientResponse.class); //提交put请求，进行续约

                register(); //[第一次注册；] 如果返回续约状态状态码为404,则进行注册


     1.3.3 定时更新client信息给server（client端配置文件信息发生变化）



